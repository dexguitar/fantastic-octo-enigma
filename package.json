{
  "name": "document-processing-system",
  "version": "1.0.0",
  "description": "Document processing system with API Gateway and microservices",
  "main": "index.js",
  "scripts": {
    "start": "node src/api-gateway/server.js",
    "start:api": "node src/api-gateway/server.js",
    "start:image": "node src/image-service/server.js",
    "start:text": "node src/text-service/server.js",
    "dev:api": "nodemon src/api-gateway/server.js",
    "dev:image": "nodemon src/image-service/server.js",
    "dev:text": "nodemon src/text-service/server.js",
    "test": "jest",
    "db:migrate": "node src/shared/database/migrate.js",
    "db:reset": "docker-compose exec postgres psql -U admin -d document_processing -c 'DROP SCHEMA public CASCADE; CREATE SCHEMA public;' && npm run db:migrate",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "health:api": "curl -f http://localhost:3000/health",
    "health:image": "curl -f http://localhost:3001/health",
    "health:text": "curl -f http://localhost:3002/health",
    "health:all": "npm run health:api && npm run health:image && npm run health:text",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:build": "docker-compose build",
    "test:api": "./scripts/test-api.sh",
    "test:api:local": "./scripts/test-api.sh http://localhost:3000"
  },
  "keywords": [
    "microservices",
    "kafka",
    "api-gateway",
    "document-processing"
  ],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "kafkajs": "^2.2.4",
    "multer": "^1.4.5-lts.1",
    "pg": "^8.11.3",
    "pg-pool": "^3.6.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "uuid": "^9.0.1",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.6.2"
  }
}
