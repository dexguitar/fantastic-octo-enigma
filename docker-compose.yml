version: '3.8'

services:
  # Zookeeper service (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kafka UI for monitoring (optional)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    restart: unless-stopped

  # API Gateway service
  api-gateway:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: api-gateway
    command: npm run start:api
    depends_on:
      - kafka
    ports:
      - "3000:3000"
    environment:
      - API_PORT=3000
      - API_HOST=0.0.0.0
      - KAFKA_CLIENT_ID=document-processor
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_GROUP_ID=document-processing-group
      - TOPIC_IMAGE_PROCESSING=document-image-processing
      - TOPIC_TEXT_PROCESSING=document-text-processing
      - TOPIC_PROCESSING_RESULTS=document-processing-results
      - NODE_ENV=production
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Image Service
  image-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: image-service
    command: npm run start:image
    depends_on:
      - kafka
    ports:
      - "3001:3001"
    environment:
      - KAFKA_CLIENT_ID=document-processor-image
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_GROUP_ID=image-service-group
      - TOPIC_IMAGE_PROCESSING=document-image-processing
      - TOPIC_PROCESSING_RESULTS=document-processing-results
      - NODE_ENV=production
      - IMAGE_SERVICE_PORT=3001
      - IMAGE_SERVICE_HOST=0.0.0.0
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Text Service
  text-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: text-service
    command: npm run start:text
    depends_on:
      - kafka
    ports:
      - "3002:3002"
    environment:
      - KAFKA_CLIENT_ID=document-processor-text
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_GROUP_ID=text-service-group
      - TOPIC_TEXT_PROCESSING=document-text-processing
      - TOPIC_PROCESSING_RESULTS=document-processing-results
      - NODE_ENV=production
      - TEXT_SERVICE_PORT=3002
      - TEXT_SERVICE_HOST=0.0.0.0
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
  node_modules: 